{"version":3,"sources":["app.js","EtsyApi.js","etsyShow.js","etsyUser.js","palindrome-tests.js","palindrome.js","routing.js","init.js"],"names":[],"mappings":"AAAA;AACA;AACA;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChDA;AACA;AACA;AACA;AACA","file":"app.js","sourcesContent":["// The namespace for this application\nvar app = {};\n","app.EtsyApi = function(spec) {\n  if(!spec.apiKey) {\n    throw console.log('you must enter an api');\n  }\n\n  var baseUrl = 'https://openapi.etsy.com/' + (spec.apiVersion || 'v2');\n\n  // adding persistance and \n\n  self = {\n\n    listings: function() {\n      var url = baseUrl + '/listings/active.js?limit=25&includes=MainImage&api_key=' + spec.apiKey + '&callback=?';\n      var promise= $.Deferred();\n\n      var req = $.getJSON(url).done(function(data){\n        if(!data.ok) {\n\n          promise.reject(req, 'Unknown Error', data);\n        } else {\n          promise.resolve(data);\n        }\n      });\n\n      return promise;\n    },\n    userDetail: function(userID) {\n      var url = baseUrl + '/users/' + userID + '/profile.js?api_key=' + spec.apiKey + '&callback=?';\n      var promise= $.Deferred();\n\n      var req = $.getJSON(url).done(function(data){\n        if(!data.ok) {\n          promise.reject(req, 'Unknown Error', data);\n        } else {\n          promise.resolve(data);\n        }\n      });\n\n      return promise;\n    }\n  };\n\n  return self;\n};\n","app.etsyShow = function() {\n  var api = app.EtsyApi({ apiKey: 'j4t40f6swvekws6carlvptkh' });\n  var listTemplate = _.template($('#etsyShow').html(), { variable: 'm' });\n  api.listings()\n    .done(function (data) {\n      // Let's put the data in the console so we can\n      // explore it...\n      $.get('views/listings.html').done(function (html) {\n        var template = _.template(html, { variable: 'm' });\n        $('.etsy-content').html(template({ items: data.results }));\n      });\n    })\n    .fail(function (req, status, err) {\n      $('.etsy-content').text(err.error);\n    });\n};\n","app.etsyUser = function(userID) {\n  var api = app.EtsyApi({ apiKey: 'j4t40f6swvekws6carlvptkh' });\n  var listTemplate = _.template($('#etsyShow').html(), { variable: 'm' });\n  api.userDetail(userID)\n    .done(function (data) {\n      // Let's put the data in the console so we can\n      // explore it...\n      $.get('views/user.html').done(function (html) {\n        var template = _.template(html, { variable: 'm' });\n        console.log(data.results);\n        $('.etsy-content').html(template({ users: data.results }));\n      });\n    })\n    .fail(function (req, status, err) {\n      $('.etsy-content').text(err.error);\n    });\n};\n","describe(\"palindrome works\", function() {\n  it(\"if it doesn't see a palindrome it returns false\", function() {\n    expect(isPalindrome('Mommy')).toBe(false);\n  });\n  it(\"sees a palindrome and returns true\", function() {\n    expect(isPalindrome('mom')).toBe(true);\n  });\n  it(\"still works with uppercase characters\", function() {\n    expect(isPalindrome('Radar')).toBe(true);    \n  });\n\n});\n","function isPalindrome(str) {\n  var forward = str.toLowerCase();\n  var reverse = forward.split('').reverse().join('');\n  var result;\n  forward !== reverse ? result = false : result = true;\n\n  return result;\n}\n","app.routingPage = function () {\n\n  // Our router\n  var r = Rlite();\n\n  // // Default route\n  r.add('', app.etsyShow);\n\n  // #users\n  r.add('users', showUsers);\n\n  // #users/chris -> r.params.name will equal 'chris'\n  r.add('users/:name', function (r) {\n    app.etsyUser(r.params.name);\n  });\n\n  function showUsers() {\n    console.log('hey now');\n    $.get('views/users.html').done(function (html) {\n      $('.main-content').html(html);\n    });\n  }\n\n  // Hash-based routing\n\n  function processHash() {\n    var hash = location.hash || '#';\n\n    if (!r.run(hash.slice(1))) {\n      $('.etsy-content').text('page not found');\n    }\n  }\n\n  window.addEventListener('hashchange', processHash);\n  processHash();\n\n  // TODO: We could improve this in many ways.\n\n\n  // One, every time we go to the #users or #users/foo route,\n  // we are requesting the HTML again. We ought to cache them,\n  // instead into an object (or hash table).\n  //\n  // Another thing, is we are recompiling the user.html template\n  // every time we show a user... We could cache the compiled\n  // templates, too, so they are compiled once they are downloaded\n  // and never again!\n};\n","$(function () {\n  var page = $('body').data('page');\n  app[page]();\n});\n"],"sourceRoot":"/source/"}